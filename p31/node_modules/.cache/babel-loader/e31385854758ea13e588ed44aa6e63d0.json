{"remainingRequest":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\e28\\p31\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\e28\\p31\\src\\views\\Shows\\Shows.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\e28\\p31\\src\\views\\Shows\\Shows.vue","mtime":1574296258000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ShowService from \"../../services/shows.service\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport router from \"../../router\";\nimport { AuthConfig, CommonMessageConfig } from \"../../assets/configuration/config\";\nexport default {\n  name: \"Shows\",\n  data: function data() {\n    return {\n      options: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        defaultDate: new Date(),\n        displayEventTime: false,\n        header: {\n          left: \"prev,next\",\n          center: \"title\",\n          right: \"\"\n        },\n        eventClick: function eventClick(info) {\n          router.push({\n            name: \"ShowDetails\",\n            params: {\n              id: info.event.id\n            }\n          });\n        }\n      },\n      editable: false,\n      posts: null,\n      genre: [],\n      selectedGenre: {\n        nGenreId: 0,\n        sGenreName: \"All\"\n      }\n    };\n  },\n  showService: null,\n  created: function created() {\n    this.showService = new ShowService();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var email = localStorage.getItem(\"Email\");\n    var password = localStorage.getItem(\"Password\");\n\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\n      router.push({\n        name: \"login\"\n      });\n    } else {\n      var _this = this;\n\n      this.getGenre();\n      this.showService.getPosts().then(function (response) {\n        _this2.posts = response.data;\n      });\n    }\n  },\n  methods: {\n    getGenre: function getGenre() {\n      var _this3 = this;\n\n      this.showService.getGenre().then(function (response) {\n        response.data.push({\n          nGenreId: 0,\n          sGenreName: \"All\"\n        });\n        _this3.genre = _this3.alphaSortByKey(response.data, \"nGenreId\");\n      });\n    },\n    getPostByGenre: function getPostByGenre() {\n      var _this4 = this;\n\n      this.showService.getPostByGenre(this.selectedGenre.nGenreId).then(function (response) {\n        _this4.posts = response.data;\n      });\n    },\n    alphaSortByKey: function alphaSortByKey(arr, key) {\n      arr.sort(function (a, b) {\n        if (a[key] < b[key]) return -1;\n        if (a[key] > b[key]) return 1;\n        return 0;\n      });\n      return arr;\n    }\n  }\n};",{"version":3,"sources":["Shows.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-row class=\"ml-2 mt-4 mr-2 mb-4 bg-white\">\r\n    <b-col cols=\"12\" xl=\"12\" class=\"m-2 text-center\">\r\n      <label class=\"fontbold\">GENRE &nbsp;</label>\r\n      <Dropdown\r\n        v-model=\"selectedGenre\"\r\n        :options=\"genre\"\r\n        optionLabel=\"sGenreName\"\r\n        placeholder=\"Select a Genre\"\r\n        @change=\"getPostByGenre\"\r\n      />\r\n    </b-col>\r\n    <b-col cols=\"12\" xl=\"12\" class=\"m-2\">\r\n      <FullCalendar :events=\"posts\" :options=\"options\" />\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n\r\n<script>\r\nimport ShowService from \"../../services/shows.service\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport router from \"../../router\";\r\nimport {\r\n  AuthConfig,\r\n  CommonMessageConfig\r\n} from \"../../assets/configuration/config\";\r\nexport default {\r\n  name: \"Shows\",\r\n  data() {\r\n    return {\r\n      options: {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultDate: new Date(),\r\n        displayEventTime: false,\r\n        header: {\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"\"\r\n        },\r\n\r\n        eventClick: function(info) {\r\n          router.push({ name: \"ShowDetails\", params: { id: info.event.id } });\r\n        }\r\n      },\r\n\r\n      editable: false,\r\n      posts: null,\r\n      genre: [],\r\n      selectedGenre: {\r\n        nGenreId: 0,\r\n        sGenreName: \"All\"\r\n      }\r\n    };\r\n  },\r\n  showService: null,\r\n  created() {\r\n    this.showService = new ShowService();\r\n  },\r\n  mounted() {\r\n    let email = localStorage.getItem(\"Email\");\r\n    let password = localStorage.getItem(\"Password\");\r\n\r\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      let _this = this;\r\n      this.getGenre();\r\n      this.showService.getPosts().then(response => {\r\n        this.posts = response.data;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getGenre() {\r\n      this.showService.getGenre().then(response => {\r\n        response.data.push({\r\n          nGenreId: 0,\r\n          sGenreName: \"All\"\r\n        });\r\n        this.genre = this.alphaSortByKey(response.data, \"nGenreId\");\r\n      });\r\n    },\r\n    getPostByGenre() {\r\n      this.showService\r\n        .getPostByGenre(this.selectedGenre.nGenreId)\r\n        .then(response => {\r\n          this.posts = response.data;\r\n        });\r\n    },\r\n    alphaSortByKey: function(arr, key) {\r\n      arr.sort(function(a, b) {\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* IE fix */\r\n#card-chart-01,\r\n#card-chart-02 {\r\n  width: 100% !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/Shows"}]}