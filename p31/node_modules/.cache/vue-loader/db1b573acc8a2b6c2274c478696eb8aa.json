{"remainingRequest":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\e28\\p31\\node_modules\\primevue\\components\\datatable\\ColumnSlot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\primevue\\components\\datatable\\ColumnSlot.vue","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nexport default {\n    functional: true,\n    props: {\n        column: {\n            type: null,\n            default: null\n        },\n        data: {\n            type: null,\n            default: null\n        },\n        index: {\n            type: Number,\n            default: null\n        },\n        type: {\n            type: String,\n            default: null\n        }\n    },\n    render(createElement, context) {\n        const content = context.props.column.$scopedSlots[context.props.type]({\n            'data': context.props.data,\n            'index': context.props.index,\n            'column': context.props.column\n        });\n        return [content];\n    }\n}\n",{"version":3,"sources":["ColumnSlot.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ColumnSlot.vue","sourceRoot":"node_modules/primevue/components/datatable","sourcesContent":["<script>\nexport default {\n    functional: true,\n    props: {\n        column: {\n            type: null,\n            default: null\n        },\n        data: {\n            type: null,\n            default: null\n        },\n        index: {\n            type: Number,\n            default: null\n        },\n        type: {\n            type: String,\n            default: null\n        }\n    },\n    render(createElement, context) {\n        const content = context.props.column.$scopedSlots[context.props.type]({\n            'data': context.props.data,\n            'index': context.props.index,\n            'column': context.props.column\n        });\n        return [content];\n    }\n}\n</script>"]}]}