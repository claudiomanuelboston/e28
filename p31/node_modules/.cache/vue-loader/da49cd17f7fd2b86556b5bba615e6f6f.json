{"remainingRequest":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\e28\\p31\\src\\views\\Shows\\Shows.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\e28\\p31\\src\\views\\Shows\\Shows.vue","mtime":1574338266282},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ShowService from \"../../services/shows.service\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport router from \"../../router\";\r\nimport {\r\n  AuthConfig,\r\n  CommonMessageConfig\r\n} from \"../../assets/configuration/config\";\r\nexport default {\r\n  name: \"Shows\",\r\n  data() {\r\n    return {\r\n      options: {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultDate: new Date(),\r\n        displayEventTime: false,\r\n        header: {\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"\"\r\n        },\r\n\r\n        eventClick: function(info) {\r\n          router.push({ name: \"ShowDetails\", params: { id: info.event.id } });\r\n        }\r\n      },\r\n\r\n      editable: false,\r\n      posts: null,\r\n      genre: [],\r\n      selectedGenre: {\r\n        nGenreId: 0,\r\n        sGenreName: \"All\"\r\n      }\r\n    };\r\n  },\r\n  showService: null,\r\n  created() {\r\n    this.showService = new ShowService();\r\n  },\r\n  mounted() {\r\n    let email = localStorage.getItem(\"Email\");\r\n    let password = localStorage.getItem(\"Password\");\r\n\r\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      let _this = this;\r\n      this.getGenre();\r\n      this.showService.getPosts().then(response => {\r\n        this.posts = response.data;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getGenre() {\r\n      this.showService.getGenre().then(response => {\r\n        response.data.push({\r\n          nGenreId: 0,\r\n          sGenreName: \"All\"\r\n        });\r\n        this.genre = this.alphaSortByKey(response.data, \"nGenreId\");\r\n      });\r\n    },\r\n    getPostByGenre() {\r\n      this.showService\r\n        .getPostByGenre(this.selectedGenre.nGenreId)\r\n        .then(response => {\r\n          this.posts = response.data;\r\n        });\r\n    },\r\n    alphaSortByKey: function(arr, key) {\r\n      arr.sort(function(a, b) {\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Shows.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Shows.vue","sourceRoot":"src/views/Shows","sourcesContent":["<template>\r\n  <b-row class=\"ml-2 mt-4 mr-2 mb-4 bg-white\">\r\n    <b-col cols=\"12\" xl=\"12\" class=\"m-2 text-center\">\r\n      <label class=\"fontbold\">GENRE &nbsp;</label>\r\n      <Dropdown\r\n        v-model=\"selectedGenre\"\r\n        :options=\"genre\"\r\n        optionLabel=\"sGenreName\"\r\n        placeholder=\"Select a Genre\"\r\n        @change=\"getPostByGenre\"\r\n      />\r\n    </b-col>\r\n    <b-col cols=\"12\" xl=\"12\" class=\"m-2\">\r\n      <FullCalendar :events=\"posts\" :options=\"options\" />\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n\r\n<script>\r\nimport ShowService from \"../../services/shows.service\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport router from \"../../router\";\r\nimport {\r\n  AuthConfig,\r\n  CommonMessageConfig\r\n} from \"../../assets/configuration/config\";\r\nexport default {\r\n  name: \"Shows\",\r\n  data() {\r\n    return {\r\n      options: {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultDate: new Date(),\r\n        displayEventTime: false,\r\n        header: {\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"\"\r\n        },\r\n\r\n        eventClick: function(info) {\r\n          router.push({ name: \"ShowDetails\", params: { id: info.event.id } });\r\n        }\r\n      },\r\n\r\n      editable: false,\r\n      posts: null,\r\n      genre: [],\r\n      selectedGenre: {\r\n        nGenreId: 0,\r\n        sGenreName: \"All\"\r\n      }\r\n    };\r\n  },\r\n  showService: null,\r\n  created() {\r\n    this.showService = new ShowService();\r\n  },\r\n  mounted() {\r\n    let email = localStorage.getItem(\"Email\");\r\n    let password = localStorage.getItem(\"Password\");\r\n\r\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      let _this = this;\r\n      this.getGenre();\r\n      this.showService.getPosts().then(response => {\r\n        this.posts = response.data;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    getGenre() {\r\n      this.showService.getGenre().then(response => {\r\n        response.data.push({\r\n          nGenreId: 0,\r\n          sGenreName: \"All\"\r\n        });\r\n        this.genre = this.alphaSortByKey(response.data, \"nGenreId\");\r\n      });\r\n    },\r\n    getPostByGenre() {\r\n      this.showService\r\n        .getPostByGenre(this.selectedGenre.nGenreId)\r\n        .then(response => {\r\n          this.posts = response.data;\r\n        });\r\n    },\r\n    alphaSortByKey: function(arr, key) {\r\n      arr.sort(function(a, b) {\r\n        if (a[key] < b[key]) return -1;\r\n        if (a[key] > b[key]) return 1;\r\n        return 0;\r\n      });\r\n      return arr;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* IE fix */\r\n#card-chart-01,\r\n#card-chart-02 {\r\n  width: 100% !important;\r\n}\r\n</style>\r\n"]}]}