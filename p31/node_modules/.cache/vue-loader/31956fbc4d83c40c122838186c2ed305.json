{"remainingRequest":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\e28\\p31\\src\\views\\MusicianFavoriteList\\MusicianFavoriteList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\e28\\p31\\src\\views\\MusicianFavoriteList\\MusicianFavoriteList.vue","mtime":1574338266251},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\e28\\p31\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n//service\r\nimport ShowService from \"../../services/shows.service\";\r\nimport {\r\n  AuthConfig,\r\n  CommonMessageConfig\r\n} from \"../../assets/configuration/config\";\r\nimport router from \"../../router\";\r\n\r\nexport default {\r\n  name: \"MusicianFavoriteList\",\r\n  data() {\r\n    return {\r\n      genre: [],\r\n      artists: [],\r\n      shows: [],\r\n      tempShows: [],\r\n      filters: \"\"\r\n    };\r\n  },\r\n  showService: null,\r\n  created() {\r\n    this.showService = new ShowService();\r\n  },\r\n  mounted() {\r\n    let email = localStorage.getItem(\"Email\");\r\n    let password = localStorage.getItem(\"Password\");\r\n\r\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      let _this = this;\r\n      this.getGenre();\r\n      this.getArtist();\r\n    }\r\n  },\r\n  methods: {\r\n    onSearch(searchText) {\r\n      if (!this.shows) return [];\r\n      if (!searchText) {\r\n        this.p = 1;\r\n        this.shows = [];\r\n        this.shows = this.tempShows;\r\n        return this.shows;\r\n      }\r\n\r\n      if (searchText) {\r\n        let text = searchText.toLowerCase();\r\n        let list = this.tempShows.filter(it => {\r\n          return (\r\n            (it.sName != null\r\n              ? it.sName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.sGenreName != null\r\n              ? it.sGenreName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.sDescription != null\r\n              ? it.sDescription\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            // (it.sVenue != null\r\n            //   ? it.sVenue\r\n            //       .toString()\r\n            //       .toLowerCase()\r\n            //       .includes(text)\r\n            //   : \"\") ||\r\n            (it.sArtistName != null\r\n              ? it.sArtistName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.nTicketPrice != null\r\n              ? it.nTicketPrice\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.title != null\r\n              ? it.title\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\")\r\n          );\r\n        });\r\n\r\n        this.shows = [];\r\n        this.shows = list;\r\n      }\r\n    },\r\n    getGenre() {\r\n      this.showService.getGenre().then(response => {\r\n        this.genre = response.data;\r\n        if (this.genre != undefined && this.genre.length > 0) {\r\n          this.getFavoriteShows();\r\n          this.tempShows = this.shows;\r\n        }\r\n      });\r\n    },\r\n    getArtist() {\r\n      this.showService.getArtist().then(response => {\r\n        this.artists = response.data;\r\n        if (this.artists != undefined && this.artists.length > 0) {\r\n          this.getFavoriteShows();\r\n          this.tempShows = this.shows;\r\n        }\r\n      });\r\n    },\r\n\r\n    getFavoriteShows() {\r\n      this.shows = JSON.parse(localStorage.getItem(\"favoriteList\"));\r\n      if (this.shows != null) {\r\n        this.shows.forEach(el => {\r\n          if (el) {\r\n            el.sDescription = this.strippedContent(el.sDescription);\r\n            el.sGenreName = this.genre.find(\r\n              x => x.nGenreId == el.nGenreId\r\n            ).sGenreName;\r\n\r\n            let artist = this.artists.find(x => x.nArtistId == el.nArtistId);\r\n            if (artist) {\r\n              el.sArtistName = artist.sArtistName;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    strippedContent(string) {\r\n      let regex = /(<([^>]+)>)/gi;\r\n      return string.replace(regex, \"\");\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["MusicianFavoriteList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"MusicianFavoriteList.vue","sourceRoot":"src/views/MusicianFavoriteList","sourcesContent":["<template>\r\n  <div class=\"m-4\">\r\n    <b-row class=\"mb-3 mt-3 p-4 justify-content-md-center bg-white\">\r\n      <b-col>\r\n        <h1>Favorite List</h1>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"pt-3 bg-white\">\r\n      <!-- <div class=\"col-xs-12\"> -->\r\n      <div class=\"card w-100\">\r\n        <!-- <div class=\"card-header\">\r\n          <div data-v-715a1058>\r\n            <strong data-v-715a1058>Favorite List</strong>\r\n          </div>\r\n        </div>-->\r\n        <div class=\"card-body\">\r\n          <DataTable\r\n            class=\"p-datatable-responsive\"\r\n            :value=\"shows\"\r\n            :paginator=\"true\"\r\n            :rows=\"5\"\r\n            sortField=\"dDate\"\r\n            :sortOrder=\"1\"\r\n          >\r\n            <template #empty>\r\n              <div style=\"text:align:center\">No records found</div>\r\n            </template>\r\n            <template #header>\r\n              <div style=\"text-align: right\">\r\n                <i class=\"pi pi-search\" style=\"margin: 4px 4px 0px 0px;\"></i>\r\n                <InputText v-model=\"filters\" placeholder=\"Search\" size=\"50\" v-on:input=\"onSearch\" />\r\n              </div>\r\n            </template>\r\n\r\n            <Column field=\"sName\" header=\"Show Name\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Show Name</span>\r\n                {{slotProps.data.sName}}\r\n              </template>\r\n            </Column>\r\n            <Column field=\"sGenreName\" header=\"Genre\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Genre</span>\r\n                {{slotProps.data.sGenreName}}\r\n              </template>\r\n            </Column>\r\n            <Column field=\"sDescription\" header=\"Description\">\r\n              <template #body=\"slotProps\">\r\n                <div class=\"wrap-text\" :title=\"slotProps.data.sDescription\">\r\n                  <span class=\"p-column-title\">Description</span>\r\n                  {{slotProps.data.sDescription}}\r\n                </div>\r\n              </template>\r\n            </Column>\r\n            <Column field=\"dDate\" header=\"Show Date\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Show Date</span>\r\n                {{slotProps.data.dDate}}\r\n              </template>\r\n            </Column>\r\n            <!-- <Column field=\"sVenue\" header=\"Venue\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <div class=\"wrap-text\" :title=\"slotProps.data.sVenue\">\r\n                  <span class=\"p-column-title\">Venue</span>\r\n                  {{slotProps.data.sVenue}}\r\n                </div>\r\n              </template>\r\n            </Column>-->\r\n            <Column field=\"sArtistName\" header=\"Artist\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Artist</span>\r\n                {{slotProps.data.sArtistName}}\r\n              </template>\r\n            </Column>\r\n            <Column field=\"nTicketPrice\" header=\"Ticket Price\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Ticket Price</span>\r\n                ${{slotProps.data.nTicketPrice}}\r\n              </template>\r\n            </Column>\r\n            <!-- <Column field=\"sPhoneNo\" header=\"Phone No\" :sortable=\"true\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Phone No</span>\r\n                {{slotProps.data.sPhoneNo}}\r\n              </template>\r\n            </Column>-->\r\n            <Column header=\"Action\">\r\n              <template #body=\"slotProps\">\r\n                <span class=\"p-column-title\">Action</span>\r\n                <a :href=\"'/#/details/'+slotProps.data.id\">Go to Post</a>\r\n              </template>\r\n            </Column>\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    </b-row>\r\n  </div>\r\n  <!-- </div> -->\r\n</template>\r\n\r\n<script>\r\n//service\r\nimport ShowService from \"../../services/shows.service\";\r\nimport {\r\n  AuthConfig,\r\n  CommonMessageConfig\r\n} from \"../../assets/configuration/config\";\r\nimport router from \"../../router\";\r\n\r\nexport default {\r\n  name: \"MusicianFavoriteList\",\r\n  data() {\r\n    return {\r\n      genre: [],\r\n      artists: [],\r\n      shows: [],\r\n      tempShows: [],\r\n      filters: \"\"\r\n    };\r\n  },\r\n  showService: null,\r\n  created() {\r\n    this.showService = new ShowService();\r\n  },\r\n  mounted() {\r\n    let email = localStorage.getItem(\"Email\");\r\n    let password = localStorage.getItem(\"Password\");\r\n\r\n    if (email != AuthConfig.sEmail && password != AuthConfig.sPassword) {\r\n      router.push({ name: \"login\" });\r\n    } else {\r\n      let _this = this;\r\n      this.getGenre();\r\n      this.getArtist();\r\n    }\r\n  },\r\n  methods: {\r\n    onSearch(searchText) {\r\n      if (!this.shows) return [];\r\n      if (!searchText) {\r\n        this.p = 1;\r\n        this.shows = [];\r\n        this.shows = this.tempShows;\r\n        return this.shows;\r\n      }\r\n\r\n      if (searchText) {\r\n        let text = searchText.toLowerCase();\r\n        let list = this.tempShows.filter(it => {\r\n          return (\r\n            (it.sName != null\r\n              ? it.sName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.sGenreName != null\r\n              ? it.sGenreName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.sDescription != null\r\n              ? it.sDescription\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            // (it.sVenue != null\r\n            //   ? it.sVenue\r\n            //       .toString()\r\n            //       .toLowerCase()\r\n            //       .includes(text)\r\n            //   : \"\") ||\r\n            (it.sArtistName != null\r\n              ? it.sArtistName\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.nTicketPrice != null\r\n              ? it.nTicketPrice\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\") ||\r\n            (it.title != null\r\n              ? it.title\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(text)\r\n              : \"\")\r\n          );\r\n        });\r\n\r\n        this.shows = [];\r\n        this.shows = list;\r\n      }\r\n    },\r\n    getGenre() {\r\n      this.showService.getGenre().then(response => {\r\n        this.genre = response.data;\r\n        if (this.genre != undefined && this.genre.length > 0) {\r\n          this.getFavoriteShows();\r\n          this.tempShows = this.shows;\r\n        }\r\n      });\r\n    },\r\n    getArtist() {\r\n      this.showService.getArtist().then(response => {\r\n        this.artists = response.data;\r\n        if (this.artists != undefined && this.artists.length > 0) {\r\n          this.getFavoriteShows();\r\n          this.tempShows = this.shows;\r\n        }\r\n      });\r\n    },\r\n\r\n    getFavoriteShows() {\r\n      this.shows = JSON.parse(localStorage.getItem(\"favoriteList\"));\r\n      if (this.shows != null) {\r\n        this.shows.forEach(el => {\r\n          if (el) {\r\n            el.sDescription = this.strippedContent(el.sDescription);\r\n            el.sGenreName = this.genre.find(\r\n              x => x.nGenreId == el.nGenreId\r\n            ).sGenreName;\r\n\r\n            let artist = this.artists.find(x => x.nArtistId == el.nArtistId);\r\n            if (artist) {\r\n              el.sArtistName = artist.sArtistName;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    strippedContent(string) {\r\n      let regex = /(<([^>]+)>)/gi;\r\n      return string.replace(regex, \"\");\r\n    }\r\n  }\r\n};\r\n</script>"]}]}